//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace CIS3342TermProjectFall2015.TP_CreditCardWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TP_CreditCardWSSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class TP_CreditCardWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerIDFromAccountIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback MatchCustomerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestAmazonCreditCardOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TP_CreditCardWS() {
            this.Url = global::CIS3342TermProjectFall2015.Properties.Settings.Default.CIS3342TermProjectFall2015_TP_CreditCardWS_TP_CreditCardWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCustomerIDCompletedEventHandler getCustomerIDCompleted;
        
        /// <remarks/>
        public event getCustomerIDFromAccountIDCompletedEventHandler getCustomerIDFromAccountIDCompleted;
        
        /// <remarks/>
        public event AddCustomerCompletedEventHandler AddCustomerCompleted;
        
        /// <remarks/>
        public event MatchCustomerInfoCompletedEventHandler MatchCustomerInfoCompleted;
        
        /// <remarks/>
        public event GetBalanceCompletedEventHandler GetBalanceCompleted;
        
        /// <remarks/>
        public event UpdateAccountBalanceCompletedEventHandler UpdateAccountBalanceCompleted;
        
        /// <remarks/>
        public event InsertNewTransactionCompletedEventHandler InsertNewTransactionCompleted;
        
        /// <remarks/>
        public event InsertNewAccountCompletedEventHandler InsertNewAccountCompleted;
        
        /// <remarks/>
        public event RequestAmazonCreditCardCompletedEventHandler RequestAmazonCreditCardCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCustomerID() {
            object[] results = this.Invoke("getCustomerID", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerIDAsync() {
            this.getCustomerIDAsync(null);
        }
        
        /// <remarks/>
        public void getCustomerIDAsync(object userState) {
            if ((this.getCustomerIDOperationCompleted == null)) {
                this.getCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerIDOperationCompleted);
            }
            this.InvokeAsync("getCustomerID", new object[0], this.getCustomerIDOperationCompleted, userState);
        }
        
        private void OngetCustomerIDOperationCompleted(object arg) {
            if ((this.getCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerIDCompleted(this, new getCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerIDFromAccountID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCustomerIDFromAccountID(string AccountID) {
            object[] results = this.Invoke("getCustomerIDFromAccountID", new object[] {
                        AccountID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerIDFromAccountIDAsync(string AccountID) {
            this.getCustomerIDFromAccountIDAsync(AccountID, null);
        }
        
        /// <remarks/>
        public void getCustomerIDFromAccountIDAsync(string AccountID, object userState) {
            if ((this.getCustomerIDFromAccountIDOperationCompleted == null)) {
                this.getCustomerIDFromAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerIDFromAccountIDOperationCompleted);
            }
            this.InvokeAsync("getCustomerIDFromAccountID", new object[] {
                        AccountID}, this.getCustomerIDFromAccountIDOperationCompleted, userState);
        }
        
        private void OngetCustomerIDFromAccountIDOperationCompleted(object arg) {
            if ((this.getCustomerIDFromAccountIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerIDFromAccountIDCompleted(this, new getCustomerIDFromAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCustomer(Customer cust) {
            object[] results = this.Invoke("AddCustomer", new object[] {
                        cust});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCustomerAsync(Customer cust) {
            this.AddCustomerAsync(cust, null);
        }
        
        /// <remarks/>
        public void AddCustomerAsync(Customer cust, object userState) {
            if ((this.AddCustomerOperationCompleted == null)) {
                this.AddCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomerOperationCompleted);
            }
            this.InvokeAsync("AddCustomer", new object[] {
                        cust}, this.AddCustomerOperationCompleted, userState);
        }
        
        private void OnAddCustomerOperationCompleted(object arg) {
            if ((this.AddCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomerCompleted(this, new AddCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MatchCustomerInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet MatchCustomerInfo(object[] info) {
            object[] results = this.Invoke("MatchCustomerInfo", new object[] {
                        info});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void MatchCustomerInfoAsync(object[] info) {
            this.MatchCustomerInfoAsync(info, null);
        }
        
        /// <remarks/>
        public void MatchCustomerInfoAsync(object[] info, object userState) {
            if ((this.MatchCustomerInfoOperationCompleted == null)) {
                this.MatchCustomerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatchCustomerInfoOperationCompleted);
            }
            this.InvokeAsync("MatchCustomerInfo", new object[] {
                        info}, this.MatchCustomerInfoOperationCompleted, userState);
        }
        
        private void OnMatchCustomerInfoOperationCompleted(object arg) {
            if ((this.MatchCustomerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MatchCustomerInfoCompleted(this, new MatchCustomerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBalance(string AccountID) {
            object[] results = this.Invoke("GetBalance", new object[] {
                        AccountID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBalanceAsync(string AccountID) {
            this.GetBalanceAsync(AccountID, null);
        }
        
        /// <remarks/>
        public void GetBalanceAsync(string AccountID, object userState) {
            if ((this.GetBalanceOperationCompleted == null)) {
                this.GetBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBalanceOperationCompleted);
            }
            this.InvokeAsync("GetBalance", new object[] {
                        AccountID}, this.GetBalanceOperationCompleted, userState);
        }
        
        private void OnGetBalanceOperationCompleted(object arg) {
            if ((this.GetBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBalanceCompleted(this, new GetBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccountBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAccountBalance(object[] Purchase, string password) {
            object[] results = this.Invoke("UpdateAccountBalance", new object[] {
                        Purchase,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountBalanceAsync(object[] Purchase, string password) {
            this.UpdateAccountBalanceAsync(Purchase, password, null);
        }
        
        /// <remarks/>
        public void UpdateAccountBalanceAsync(object[] Purchase, string password, object userState) {
            if ((this.UpdateAccountBalanceOperationCompleted == null)) {
                this.UpdateAccountBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountBalanceOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountBalance", new object[] {
                        Purchase,
                        password}, this.UpdateAccountBalanceOperationCompleted, userState);
        }
        
        private void OnUpdateAccountBalanceOperationCompleted(object arg) {
            if ((this.UpdateAccountBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountBalanceCompleted(this, new UpdateAccountBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertNewTransaction(object[] TransactionInfo, string password) {
            object[] results = this.Invoke("InsertNewTransaction", new object[] {
                        TransactionInfo,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewTransactionAsync(object[] TransactionInfo, string password) {
            this.InsertNewTransactionAsync(TransactionInfo, password, null);
        }
        
        /// <remarks/>
        public void InsertNewTransactionAsync(object[] TransactionInfo, string password, object userState) {
            if ((this.InsertNewTransactionOperationCompleted == null)) {
                this.InsertNewTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewTransactionOperationCompleted);
            }
            this.InvokeAsync("InsertNewTransaction", new object[] {
                        TransactionInfo,
                        password}, this.InsertNewTransactionOperationCompleted, userState);
        }
        
        private void OnInsertNewTransactionOperationCompleted(object arg) {
            if ((this.InsertNewTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewTransactionCompleted(this, new InsertNewTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertNewAccount(object[] AccountInfo, string password) {
            object[] results = this.Invoke("InsertNewAccount", new object[] {
                        AccountInfo,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewAccountAsync(object[] AccountInfo, string password) {
            this.InsertNewAccountAsync(AccountInfo, password, null);
        }
        
        /// <remarks/>
        public void InsertNewAccountAsync(object[] AccountInfo, string password, object userState) {
            if ((this.InsertNewAccountOperationCompleted == null)) {
                this.InsertNewAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewAccountOperationCompleted);
            }
            this.InvokeAsync("InsertNewAccount", new object[] {
                        AccountInfo,
                        password}, this.InsertNewAccountOperationCompleted, userState);
        }
        
        private void OnInsertNewAccountOperationCompleted(object arg) {
            if ((this.InsertNewAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewAccountCompleted(this, new InsertNewAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RequestAmazonCreditCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RequestAmazonCreditCard(Customer cust) {
            object[] results = this.Invoke("RequestAmazonCreditCard", new object[] {
                        cust});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RequestAmazonCreditCardAsync(Customer cust) {
            this.RequestAmazonCreditCardAsync(cust, null);
        }
        
        /// <remarks/>
        public void RequestAmazonCreditCardAsync(Customer cust, object userState) {
            if ((this.RequestAmazonCreditCardOperationCompleted == null)) {
                this.RequestAmazonCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestAmazonCreditCardOperationCompleted);
            }
            this.InvokeAsync("RequestAmazonCreditCard", new object[] {
                        cust}, this.RequestAmazonCreditCardOperationCompleted, userState);
        }
        
        private void OnRequestAmazonCreditCardOperationCompleted(object arg) {
            if ((this.RequestAmazonCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestAmazonCreditCardCompleted(this, new RequestAmazonCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Customer {
        
        private string userNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string passwordField;
        
        private string userTypeField;
        
        private string shipAddress1Field;
        
        private string shipAddress2Field;
        
        private string shipCityField;
        
        private string shipStateField;
        
        private string shipZipField;
        
        private string billAddress1Field;
        
        private string billAddress2Field;
        
        private string billCityField;
        
        private string billStateField;
        
        private string billZipField;
        
        private float totalDollarSalesField;
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string userType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public string shipAddress1 {
            get {
                return this.shipAddress1Field;
            }
            set {
                this.shipAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string shipAddress2 {
            get {
                return this.shipAddress2Field;
            }
            set {
                this.shipAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string shipCity {
            get {
                return this.shipCityField;
            }
            set {
                this.shipCityField = value;
            }
        }
        
        /// <remarks/>
        public string shipState {
            get {
                return this.shipStateField;
            }
            set {
                this.shipStateField = value;
            }
        }
        
        /// <remarks/>
        public string shipZip {
            get {
                return this.shipZipField;
            }
            set {
                this.shipZipField = value;
            }
        }
        
        /// <remarks/>
        public string billAddress1 {
            get {
                return this.billAddress1Field;
            }
            set {
                this.billAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string billAddress2 {
            get {
                return this.billAddress2Field;
            }
            set {
                this.billAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string billCity {
            get {
                return this.billCityField;
            }
            set {
                this.billCityField = value;
            }
        }
        
        /// <remarks/>
        public string billState {
            get {
                return this.billStateField;
            }
            set {
                this.billStateField = value;
            }
        }
        
        /// <remarks/>
        public string billZip {
            get {
                return this.billZipField;
            }
            set {
                this.billZipField = value;
            }
        }
        
        /// <remarks/>
        public float totalDollarSales {
            get {
                return this.totalDollarSalesField;
            }
            set {
                this.totalDollarSalesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void getCustomerIDCompletedEventHandler(object sender, getCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void getCustomerIDFromAccountIDCompletedEventHandler(object sender, getCustomerIDFromAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerIDFromAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerIDFromAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddCustomerCompletedEventHandler(object sender, AddCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void MatchCustomerInfoCompletedEventHandler(object sender, MatchCustomerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatchCustomerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MatchCustomerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetBalanceCompletedEventHandler(object sender, GetBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateAccountBalanceCompletedEventHandler(object sender, UpdateAccountBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InsertNewTransactionCompletedEventHandler(object sender, InsertNewTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InsertNewAccountCompletedEventHandler(object sender, InsertNewAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RequestAmazonCreditCardCompletedEventHandler(object sender, RequestAmazonCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestAmazonCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestAmazonCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591